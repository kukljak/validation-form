User
how do bind a SonarCloud action into my repo in gitHub which will affect push commits into the main branch?
ChatGPT
SonarCloud provides a way to analyze code quality for your GitHub repositories. Integrating SonarCloud with GitHub Actions enables automatic code quality checks whenever code changes are pushed to your repository. Below is a step-by-step guide to bind a SonarCloud action into your GitHub repository and trigger analysis on push events to the main branch.

Prerequisites
A GitHub repository
A SonarCloud account (you can sign up for free for public repositories)
Create a SonarCloud project and generate a project token
Steps
1. Store SonarCloud Project Token as a GitHub Secret
Go to your GitHub repository, click on Settings -> Secrets -> New repository secret. Name the secret SONAR_TOKEN and paste the SonarCloud project token you generated.

2. Create GitHub Action Workflow
In your GitHub repository, navigate to the "Actions" tab and create a new workflow.
Delete any autogenerated YAML, and replace it with the following:
yaml
Copy code
name: SonarCloud Scan

on:
  push:
    branches:
      - main # or the name of your main branch

jobs:
  sonarcloud:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
    
    - name: Cache SonarCloud packages
      uses: actions/cache@v1
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar
    
    - name: Cache Maven packages
      uses: actions/cache@v1
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Run SonarCloud analysis
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: mvn -B verify --file pom.xml sonar:sonar -Dsonar.projectKey=<Your_Project_Key> -Dsonar.organization=<Your_Organization_Key> -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=$SONAR_TOKEN
Replace <Your_Project_Key> and <Your_Organization_Key> with your specific project and organization keys from SonarCloud.

Save and commit the file. This will typically go into a .github/workflows directory in your repository.
3. Trigger the Action
With the above configuration, any push to the main branch will trigger the SonarCloud analysis. You can view the results in the "Actions" tab on GitHub and also on your SonarCloud dashboard.

4. (Optional) Add SonarCloud Badges
You can add SonarCloud badges to your README.md file to display the code quality metrics. You can find the markdown for badges in the SonarCloud dashboard under the "Badges" section.

That's it! You have successfully integrated SonarCloud analysis into your GitHub repository using GitHub Actions.